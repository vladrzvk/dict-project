version: '3'
services:
  # Backend Laravel
  app:
    build:
      context: ./back
      dockerfile: Dockerfile
      args:
        user: bloguser
        uid: 1000
    image: blog-dict-backend
    container_name: blog-dict-backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./back:/var/www
    networks:
      - blog-dict

  # Serveur Web Nginx pour Laravel
  web:
    image: nginx:alpine
    container_name: blog-dict-web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./back:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - blog-dict

  # Frontend Angular
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    image: blog-dict-frontend
    container_name: blog-dict-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    networks:
      - blog-dict

  # Base de donn√©es
  db:
    image: mysql:8.0
    container_name: blog-dict-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - blog-dict
  # Service phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "8081:80"
    networks:
      - blog-dict
    depends_on:
      - db

networks:
  blog-dict:
    driver: bridge